{"version":3,"sources":["../../../lib/routes/app.js"],"names":["_express","require","_express2","_interopRequireDefault","_morgan","_morgan2","_cookieParser","_cookieParser2","_bodyParser","_bodyParser2","_tbs","_tbs2","_lcbo","_lcbo2","obj","__esModule","default","app","use","json","urlencoded","extended","req","res","next","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,SAAR,CAAf;;AAEA,IAAIC,YAAYC,uBAAuBH,QAAvB,CAAhB;;AAEA,IAAII,UAAUH,QAAQ,QAAR,CAAd;;AAEA,IAAII,WAAWF,uBAAuBC,OAAvB,CAAf;;AAEA,IAAIE,gBAAgBL,QAAQ,eAAR,CAApB;;AAEA,IAAIM,iBAAiBJ,uBAAuBG,aAAvB,CAArB;;AAEA,IAAIE,cAAcP,QAAQ,aAAR,CAAlB;;AAEA,IAAIQ,eAAeN,uBAAuBK,WAAvB,CAAnB;;AAEA,IAAIE,OAAOT,QAAQ,OAAR,CAAX;;AAEA,IAAIU,QAAQR,uBAAuBO,IAAvB,CAAZ;;AAEA,IAAIE,QAAQX,QAAQ,QAAR,CAAZ;;AAEA,IAAIY,SAASV,uBAAuBS,KAAvB,CAAb;;AAEA,SAAST,sBAAT,CAAgCW,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;AACA;;AAEA,IAAIG,MAAM,CAAC,GAAGf,UAAUc,OAAd,GAAV;;AAEAC,IAAIC,GAAJ,CAAQ,CAAC,GAAGb,SAASW,OAAb,EAAsB,KAAtB,CAAR;AACAC,IAAIC,GAAJ,CAAQT,aAAaO,OAAb,CAAqBG,IAArB,EAAR;AACAF,IAAIC,GAAJ,CAAQT,aAAaO,OAAb,CAAqBI,UAArB,CAAgC,EAAEC,UAAU,KAAZ,EAAhC,CAAR;AACAJ,IAAIC,GAAJ,CAAQ,CAAC,GAAGX,eAAeS,OAAnB,GAAR;;AAEAC,IAAIC,GAAJ,CAAQ,UAAR,EAAoBP,MAAMK,OAA1B;AACAC,IAAIC,GAAJ,CAAQ,WAAR,EAAqBL,OAAOG,OAA5B;;AAEA;AACAC,IAAIC,GAAJ,CAAQ,UAAUI,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChC,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAR,IAAIC,GAAJ,CAAQ,UAAUO,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIL,GAAJ,CAAQc,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIS,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBjB,GAAjB","file":"app.js","sourcesContent":["'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _morgan = require('morgan');\n\nvar _morgan2 = _interopRequireDefault(_morgan);\n\nvar _cookieParser = require('cookie-parser');\n\nvar _cookieParser2 = _interopRequireDefault(_cookieParser);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _tbs = require('./tbs');\n\nvar _tbs2 = _interopRequireDefault(_tbs);\n\nvar _lcbo = require('./lcbo');\n\nvar _lcbo2 = _interopRequireDefault(_lcbo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//Necessary?\n//import path from 'path';\n\nvar app = (0, _express2.default)();\n\napp.use((0, _morgan2.default)('dev'));\napp.use(_bodyParser2.default.json());\napp.use(_bodyParser2.default.urlencoded({ extended: false }));\napp.use((0, _cookieParser2.default)());\n\napp.use('/api/tbs', _tbs2.default);\napp.use('/api/lcbo', _lcbo2.default);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;"]}